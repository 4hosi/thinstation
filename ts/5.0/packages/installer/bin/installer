#!/bin/bash
tempdir=`mktemp -d 2>/dev/null`
. /etc/thinstation.defaults

x_echo()
{
	Xdialog --title "$1" --msgbox "$2" 18 60 2> /dev/null
}

pretty_box()
{
	COUNT=10
	(while test $COUNT != 110 ; do
	echo $COUNT
	COUNT=`expr $COUNT + 1`
	sleep 1
	done
	) |
	Xdialog --title "Testing Connection" --progress "Checking Internet Connectivity" 10 60 0 &
	prettybox=$!
}

test_internet()
{
	pretty_box
	if ! wget -t 2 -T 5 http://www.doncuppjr.net/index.php ; then
			http="Fail!"
	else
		http="Success!"
		rm index.php
	fi
	if ! git clone git://thinstation.git.sourceforge.net/gitroot/thinstation/test ; then
		git="Fail!"
	else
		git="Success!"
		rm -rf test
	fi
	if [ "$http" == "Fail!" -o "$git" == "Fail!" ] ; then
        	internet="Fail!"
	else
		internet="Success!"
	fi
	kill -KILL $prettybox
}
test_internet

if [ "$internet" == "Fail!" ] ; then
	Xdialog --title "Setup Proxy" --yesno "\
Internet Connectivity Test Failed! \n\
\n\
    HTTP: $http  GIT: $git \n\
\n\
 Would you like to setup a Proxy?" 15 50
	retval=$?
	if [ "$retval" -lt "1" ]; then
		proxy-setup setup
		use_proxy=Yes
		test_internet
		export use_proxy
	fi
fi

if [ "$internet" == "Fail!" ] ; then
	x_echo "Broken Internet" "No Internet Connectivity. Exiting. \n HTTP: $http  GIT: $git "
	exit 1
fi

timezone_locale()
{
	OLDIFS=$IFS
	IFS=$'\t\n'
	option=`cat /lib/indexed-zone.tab`
	Xdialog --no-tags --title "Time Zone" --menu "Please Choose Your Time Zone" 20 40 4 ${option} 2> $tempdir/timezone
	retval=$?
	if [ "$retval" != "0" ] ; then exit $retval ; fi
	TIME_ZONE=`cat $tempdir/timezone`

	option=`cat /lib/indexed-locale.tab`
	Xdialog --no-tags --title "Locale" --menu "Localization / Keyboard Map" 20 40 4 ${option} 2> $tempdir/locale
	retval=$?
	if [ "$retval" != "0" ] ; then exit $retval ; fi
	LOCALE=`cat $tempdir/locale`

	IFS=$OLDIFS
	TIME_ZONE=`cat /lib/indexed-zone.tab |grep -E ^$TIME_ZONE[[:space:]]+ |cut -f2`
	LOCALE=`cat /lib/indexed-locale.tab |grep -E ^$LOCALE[[:space:]]+ |cut -f2 |cut -d " " -f1`
}

set_res()
{
        Xdialog --title "Modeset FB" --yesno "Is your video card an ATI or Intel?" 15 50
        retval=$?
        if [ "$retval" -lt "1" ]; then
		modeset=true
	else
		modeset=false
        fi
	index=0
	if [ -e /sys/devices/platform/uvesafb.0/vbe_modes ]; then
		for i in `cat /sys/devices/platform/uvesafb.0/vbe_modes |cut -d "-" -f1 |sort -n |uniq`; do
        	res[$index]=$i
        	echo "$index $i" >> /$tempdir/reslist
        	let index=index+1
		done
	else
		for i in `xrandr 2>/dev/null |grep -Ev 'default|Screen|connected|disconnected' |sed -r 's/[[:space:]]+/\:/g' |cut -d ":" -f2 |sort -n`; do
		res[$index]=$i
                echo "$index $i" >> /$tempdir/reslist
                let index=index+1
		done
	fi
	list=`cat $tempdir/reslist`
	Xdialog --title "Resolution" --no-label --no-tags --menu "What is your prefered\n screen resolution?" 20 40 4 $list 2> $tempdir/reschoice
	retval=$?
	if [ "$retval" -lt "1" ]; then
		index=`cat $tempdir/reschoice`
		if [ "$modeset" == "true" ]; then
			res="video=uvesafb:off"
		else
			res="video=uvesafb:"${res[$index]}"-32,mtrr:0,ywrap"
		fi
		SCREEN_RESOLUTION=${res[$index]}
	else
		exit $retval
	fi
}

disk_setup()
{
	index=0
	for i in `blockdev --report |sed -r 's/[[:space:]]+/:/g' |cut -d ":" -f7 |grep -e / |grep -v [0-9]`; do
		disksize[$index]=`blockdev --report |sed -r 's/[[:space:]]+/:/g' | grep -e $i\$ |cut -d ":" -f6`
		disk[$index]=$i
		if [ "${disksize[$index]}" -gt "10000000000" ]; then
			diskentry="${disk[$index]}:${disksize[$index]}"
			echo "$index $diskentry" >> $tempdir/available.$$
		fi
		let index=index+1
	done
	list=`cat $tempdir/available.$$`
	if [ "$[index]" == "1" ] && [ "$list" != "" ]; then
		index=0
	elif [ "$list" != "" ]; then
		Xdialog --title "Select Disk" --no-label --no-tags --menu "Which disk would you like to use?" 20 40 4 $list 2> $tempdir/sldisk.$$
		retval=$?
		if [ "$retval" -lt "1" ]; then
			index=`cat $tempdir/sldisk.$$ |cut -d " " -f1`
		else
			exit $retval
		fi
	else
		x_echo '"No usable disk"' '"ThinStation Dev requirees a disk at least 10GB in size. Exiting"'
		exit 1
	fi

	disk=${disk[$index]}
	x_echo "Selected Disk" "Using disk $disk"
	Xdialog --title "Buggy Bios" --no-tags --checklist "Do you have a buggy bios that requires the\n start of the partition to be at sector 1\n instead of the default sector of \
	2048?" 0 0 2 1 "Enable Buggy Bios Support" off 2> $tempdir/buggy
	retval=$?
	if [ "$retval" -lt "1" ] ;then
		if [ "`cat $tempdir/buggy`" == "1" ]; then
			buggybios=true
		else
			buggybios=false
		fi
	else
		exit $retval
	fi
}

install_it()
{
	Xdialog --title "Warning" --default-no --yesno "All Data on the selected disk is about to be erased.\n Do you Wish to continue?" 10 60
	retval=$?
	if [ "$retval" -gt "0" ]; then
		exit $retval
	fi
	Xdialog --title "Warning" --default-no --yesno "Are you really sure?" 10 50
	retval=$?
	if [ "$retval" -gt "0" ]; then
        	exit $retval
	else
		$XTERM_CMD -e /bin/install.sh $disk $buggybios
	fi
}
disk_setup
set_res
timezone_locale
install_it

echo "LOCALE=$LOCALE" > /root/thinstation.conf.user
echo "TIME_ZONE=$TIME_ZONE" >> /root/thinstation.conf.user
echo "SCREEN_RESOLUTION=$SCREEN_RESOLUTION" >> /root/thinstation.conf.user
echo -e '#AUDIO_LEVEL=90
#MIC_LEVEL=80
#X_DPI=100
#USE_XRANDR=FALSE
#XRANDR_OPTIONS="-s 1920x1080 --output DVI2 --right-of DVI1"
#X_DRIVER_OPTION1="HWcursor False"
#X_DRIVER_OPTION2="PanelSize 1024x600"
#SCREEN_BLANK_TIME=0
#SCREEN_STANDBY_TIME=0
#SCREEN_SUSPEND_TIME=0
#SCREEN_OFF_TIME=0
#SCREEN_HORIZSYNC="30-64 | *"
#SCREEN_VERTREFRESH="56-87 | 60 | 56 | 70 | 72 | 75"
#NET_USE=WLAN
#NET_USE_DHCP=off
#NET_IP_ADDRESS=192.168.0.1
#NET_MASK=255.255.255.0
#NET_GATEWAY=192.168.0.1
#NET_DNS1=192.168.0.2
#NET_DNS2=192.168.0.3
#NET_DNS_SEARCH=cartoons.org.nz
NET_HOSTNAME=DevStation_*
#NET_TELNETD_ENABLED=OFF
#WIRELESS_ESSID="Example"
#WIRELESS_MODE="managed"
#WIRELESS_WPAKEY="3x@mpl39@559hr@53"
#WIRELESS_DRIVER="wext"' >> /root/thinstation.conf.user

cat /boot/syslinux.tpl |sed -e "s/\$RES/$res/g" > /boot/syslinux.cfg

flag=0
for check in /boot/vmlinuz /thinstation/setup-chroot ; do
	if [ -e $check ] ; then
		let flag=flag+1
	fi
done
if [ "$flag" != "2" ]; then
	x_echo "Fail" "Something must have gone wrong with the installation"
	exit 1
fi

x_echo "Almost Done" "\
You can now make your first image by going to\n\
/thinstation and running ./setup-chroot from\n\
there cd to /ts/5.0 and run ./build"
x_echo "PXE Booting" "\
This dev workstation is a PXE boot server.\n\
You can set it's IP as the next boot server\n\
in your DHCP server, and set the boot file to\n\
pxelinux.0 . This will let clients boot directly\n\
from images created in the build env of this\n\
workstation."
x_echo "Alldone" "\
Your system is now bootable with the\n\
TS dev environment, but the password is\n\
guessable. Please reboot and if everything\n\
is ok, Tweak your DevStation and disable\n\
the telnet serice."

exit 0

