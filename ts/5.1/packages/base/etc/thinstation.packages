#! /bin/sh

. $TS_GLOBAL
PID=$$

if [ -e /etc/$PACKAGE.functions ] ; then . /etc/$PACKAGE.functions ; fi
if [ ! -e /etc/cmd/$PACKAGE.wm ] ; then if [ -n "$WMNAME" ] ; then . /etc/$WMNAME.functions ;fi ;fi

pkg_set_init_flag $PACKAGE

if [ "$SERVER" == "." ] ; then SERVER="" ; fi
if [ "$OPTIONS" == "." ] ; then OPTIONS="" ; fi
if [ -e /etc/cmd/$PACKAGE.console ] ; then . /etc/cmd/$PACKAGE.console ; fi
if [ -e /etc/cmd/$PACKAGE.window ] ; then . /etc/cmd/$PACKAGE.window ; fi
if [ -e /etc/cmd/$PACKAGE.menu ] ; then . /etc/cmd/$PACKAGE.menu ; fi
if [ -e /etc/cmd/$PACKAGE.fullscreen ] ; then . /etc/cmd/$PACKAGE.fullscreen ; fi
if [ -e /etc/cmd/$PACKAGE.global ] ; then . /etc/cmd/$PACKAGE.global ; fi

if [ -z "$CMD_CONSOLE" ] ; then CMD_CONSOLE=$CMD_GLOBAL ; fi
if [ -z "$CMD_WINDOW" ] ; then CMD_WINDOW=$CMD_GLOBAL ; fi
if [ -z "$CMD_MENU" ] ; then CMD_MENU=$CMD_GLOBAL ; fi
if [ -z "$CMD_FULLSCREEN" ] ; then CMD_FULLSCREEN=$CMD_GLOBAL ; fi

if [ -e /etc/cmd/$PACKAGE.getip ] ; then CMD_GETIP=TRUE; fi
if [ -e /etc/cmd/$PACKAGE.wm ] ; then wm_menu; fi

if [ -e /etc/cmd/$PACKAGE.change_server_type ] ; then SERVER="\"$2\"" ; elif [ ! -z "$2" ] ; then SERVER=$2 ; fi
if [ ! -z "$3" ] ; then OPTIONS=$3 ; fi
if [ -e /etc/cmd/$PACKAGE.server_first ] ; then	REVERSE_ORDER=TRUE ; fi
if [ "$PACKAGE" = "xnest" ] ; then getfreescreen ; fi

console_get_ip()
{
     if is_enabled $CMD_GETIP ; then
        if [ -z "$SERVER" ]; then
                replimenu -c $MENUCOLOUR -f $REPLIMENU/server.menu
                . /tmp/RM_SERVER
		sleep .2
                rm /tmp/RM_SERVER
        else
                RM_SERVER=$2
        fi
        SERVER=$RM_SERVER
    fi
}

x_get_ip()
{
	if is_enabled $CMD_GETIP ; then
		while is_enabled $ALWAYS_ENTER_SERVER || [ -z "$SERVER" ] ; do
        		dialog_get_server_address $PACKAGE
			local ALWAYS_ENTER_SERVER=DONE
			if [ -z "$SERVER" ] && is_enabled $ALLOW_EXIT ; then
				exit
			elif [ -z "$SERVER" ]; then
				dialog_no_value
			fi
		done
	fi
}

order_command()
{
   if is_enabled $REVERSE_ORDER ; then
	ORDERED_COMMAND="$SERVER $OPTIONS"
   else
        ORDERED_COMMAND="$OPTIONS $SERVER"
   fi
}

run_command()
{
   echo $CMD > /tmp/CMD$PID
   if [ -e /tmp/CMD$PID ] ; then
	if is_enabled $LOG_COMMANDS ; then
	        cat /tmp/CMD$PID >> $LOGFILE
	fi
        . /tmp/CMD$PID >> $LOGFILE 2>&1 &
        sleep .3
        rm /tmp/CMD$PID
   fi
}

case "$1" in
auto)
  while [ "$reconnect" != "1" ]; do
    echo "Running Auto $PACKAGE" >> $LOGFILE
    x_get_ip
    order_command
    CMD="$CMD_CONSOLE $ORDERED_COMMAND"
    wm_workspaces "$CMD" $4
    run_command
    wait
        check_NX
        check_reboot
    check_reconnect
  done
    $NO_SESSION
    ;;
menu)
    echo "Running Menu $PACKAGE" >> $LOGFILE
    console_get_ip
    order_command
    touch /tmp/X_TERMINATE    # Set flag to terminate X-Server when user exits
    start_x
    free_memory
    rm /tmp/X_TERMINATE
    # Set flag to regenerate replimenu on session exit
    if [ -n "$SESSION_NUMBER" ] ; then
    	session=/var/sessions/SESSION$SESSION_NUMBER
        CMD="(kill \`pidof replimenu\` ; touch $session ; $CMD_MENU $3 $SERVER ; rm $session ;
       	      kill \`pidof replimenu\` ; sed_file $TS_CUSTOM '/^SESSION_'$SESSION_NUMBER'_/d' )"
    else
        CMD="$CMD_MENU $ORDERED_COMMAND"
    fi
    run_command
    x_mouse
    x_mod_map
    x_numlock
    vm_agent
    ;;
console)
    echo "Running Console $PACKAGE" >> $LOGFILE
    start_x
    free_memory
    x_get_ip
    order_command
    CMD="$CMD_CONSOLE $ORDERED_COMMAND"
    while [ -e /tmp/.X11-unix/X$DISPLAY_NUMBER ] && [ "$reconnect" != "1" ]; do
        run_command
	x_mouse
	x_mod_map
	x_numlock
	vm_agent
	wait
	check_NX
	check_xrunning
	check_reboot
	check_reconnect
    done
    $NO_SESSION
    ;;
window|fullscreen)
    echo "Running $1 $PACKAGE" >> $LOGFILE
    local ALLOW_EXIT=TRUE
    if ! is_disabled $ALWAYS_ENTER_SERVER ; then
	local ALWAYS_ENTER_SERVER=TRUE
    fi
    x_get_ip
    order_command
    CMD='$'CMD_`make_caps $1`' '$ORDERED_COMMAND
    run_command
    ;;
help)
    echo "Usage: $0 {console|menu|window|fullscreen} [server] [options]"
    ;;
  *)
    exit 1
    ;;
esac

exit 0
