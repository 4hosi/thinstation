#!/bin/bash
# Description: Thinstation Utility to strip out extra files from a binary Package
# URL: http://www.thinstation.org
# Maintainer: Donald A. Cupp Jr. (don cupp jr at ya hoo dot com)

show_help()
{
echo "
This utility is designed to simplify the folder layout of a crux port into a
ts package. It will decompress the compiled port archive the belongs to the
specified package and mangle it for integration into thinstation. By default,
the destination will be in $TSWRKNG/packages/(specified package) folder.
This can be overriden with the -t or --temp (path to temp folder)
syntax.

Usage: repackage (-t (path to temp folder)) (crux port)

"
}

get_opts()
{
	if [ -z "$1" ] ; then show_help ; exit 255 ; fi
	until [ -z "$1" ] ; do
		case "$1" in
			-h|--help)		show_help ; exit 255 ;;
			-t|--temp)		temp_folder="$2" ; shift ;;
			*)			package="$1" ;;
		esac
		shift
	done
}

package_path()
{
	if [ "$temp_folder" != "" ] ; then
		pkgpath="$temp_folder/$package"
	else
		pkgpath="$TSWRKNG/packages/$package"
	fi
}

extract_archive()
{
	if [ ! -d $pkgpath ] ; then
		mkdir -p $pkgpath
	fi
	ppath=`prt-get path $package`
#	echo $ppath
	version=`prt-get current $package`
#	echo $version
	archive=$ppath/${package}#$version.pkg.tar.gz
#	echo $archive
	tar -zxf $archive -C $pkgpath 2>/dev/null
}

shallow_usr()
{
	for usr_dir in usr usr/local ; do
		for essential_dir in bin lib etc var ; do
			if [ -d $pkgpath/$usr_dir/$essential_dir ]; then
				mkdir -p $pkgpath/$essential_dir
				cp -Prf $pkgpath/$usr_dir/$essential_dir $pkgpath/.
				rm -rf $pkgpath/$usr_dir/$essential_dir
			fi
		done
		if [ -d $pkgpath/$usr_dir/sbin ] ; then
			mkdir -p $pkgpath/bin
			cp -Prf $pkgpath/$usr_dir/sbin/* $pkgpath/bin
			rm -rf $pkgpath/$usr_dir/sbin
		fi

	done
}

redirect_shared()
{
	for share_dir in share usr/share usr/local/share ; do
		if [ -d $pkgpath/$share_dir ] ; then
			if [ -d $pkgpath/$share_dir/dbus-1 ] ; then
				mkdir -p $pkgpath/etc
				cp -Prf $pkgpath/$share_dir/dbus-1 $pkgpath/etc/.
				rm -rf $pkgpath/$share_dir/dbus-1
			fi
			for shared_object in `ls --color=never $pkgpath/$share_dir` ; do
				mkdir -p $pkgpath/lib
				cp -Prfd $pkgpath/$share_dir/$shared_object $pkgpath/lib/.
				rm -rf $pkgpath/$share_dir/$shared_object
			done
		fi
		if [ -d $pkgpath/$share_dir ] ; then
			rmdir $pkgpath/$share_dir
		fi
	done
}

extra_dirs()
{
	if [ "$pkg" == "python" ] ; then
		extra_dirs="man pkgconfig"
	else
		extra_dirs="include man pkgconfig"
	fi
	for extra_dir in $extra_dirs ; do
		if [ -d $pkgpath/$extra_dir ] ; then
			rm -rf $pkgpath/$extra_dir
		fi
		if [ -d $pkgpath/usr/$extra_dir ] ; then
			rm -rf $pkgpath/usr/$extra_dir
		fi
		if [ -d $pkgpath/usr/local$extra_dir ] ; then
			rm -rf $pkgpath/usr/local/$extra_dir
		fi
		if [ -d $pkgpath/lib/$extra_dir ] ; then
			rm -rf $pkgpath/lib/$extra_dir
		fi
	done
}

extra_files()
{
	find $pkgpath -name *.a -delete
	find $pkgpath -name *.la -delete
}

remove_empty()
{
	find $pkgpath -type d -empty -delete
}

main()
{
	get_opts $@
	package_path
	extract_archive
	shallow_usr
	redirect_shared
	extra_dirs
	extra_files
	remove_empty
}

main $@
exit 0
